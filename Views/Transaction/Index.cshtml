@model PaginatedList<LibrarySystem.Models.Transaction>
@using LibrarySystem.Helpers
@{
    ViewData["Title"] = "Transactions";
}

<style>
    /* Container Styles */
    .container {
        width: initial;
        margin: 0 auto;
        padding: 10px;
    }

    /* Table Styles */
    .transaction-table {
        width: inherit;
        margin: 0 auto;
        table-layout: fixed;
    }

        .transaction-table th,
        .transaction-table td {
            padding: 12px 10px !important;
            vertical-align: middle;
            word-wrap: break-word;
            height: auto;
        }

    /* Column widths in percentage */
    .col-transaction-id {
        width: 8%;
    }

    .col-student-info {
        width: 20%;
    }

    .col-book-info {
        width: 20%;
    }

    .col-issue-date {
        width: 15%;
    }

    .col-return-date {
        width: 15%;
    }

    .col-status {
        width: 10%;
    }

    .col-actions {
        width: 8%;
    }

    /* Card styling */
    .card {
        margin: 0 auto;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        width: 100%;
    }

    /* Text styles */
    .transaction-table td,
    .transaction-table th {
        font-size: 14px;
        line-height: 1.4;
        overflow-wrap: break-word;
        word-wrap: break-word;
        word-break: break-word;
    }

    /* Button group styles */
    .transaction-table .btn-group-sm {
        display: flex;
        gap: 2px;
        justify-content: center;
        align-items: center;
    }

    .btn-group-sm .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.25rem 0.5rem;
        font-size: 14px;
        line-height: 1;
        border-radius: 0.2rem;
        height: 24px;
        width: 24px;
    }

    /* Status badge */
    .badge {
        white-space: normal;
        text-align: center;
        display: inline-block;
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 500;
    }

    /* Remove horizontal scroll */
    .table-responsive {
        overflow-x: visible;
    }

    /* Search form styles */
    .search-form select.form-select,
    .search-form .input-group {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    /* Download button styles */
    .download-btn {
        transition: all 0.3s ease;
    }

        .download-btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .action-bar {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }
</style>

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <h1 class="text-center fw-bold">TRANSACTIONS</h1>
        </div>
    </div>

    <div class="action-bar">
        <div class="row g-3 align-items-center">
            <div class="col-md-8">
                <form asp-action="Index" method="get" class="row g-3 align-items-center search-form" autocomplete="off">
                    <div class="col-md-4">
                        <select name="searchBy" class="form-select">
                            <option value="" selected="@(ViewData["SearchBy"]?.ToString() == "")">Search All Fields</option>
                            <option value="StudentName" selected="@(ViewData["SearchBy"]?.ToString() == "StudentName")">Student Name</option>
                            <option value="BookTitle" selected="@(ViewData["SearchBy"]?.ToString() == "BookTitle")">Book Title</option>
                            <option value="Status" selected="@(ViewData["SearchBy"]?.ToString() == "Status")">Status</option>
                            <option value="ID" selected="@(ViewData["SearchBy"]?.ToString() == "ID")">Transaction ID</option>
                        </select>
                    </div>
                    <div class="col-md-8">
                        <div class="input-group">
                            <input type="text" name="searchString" class="form-control" placeholder="Search..." value="@ViewData["SearchString"]" />
                            <button type="submit" class="btn btn-primary px-4">
                                <i class="fas fa-search me-2"></i>Search
                            </button>
                            <a asp-action="Index" asp-route-searchString="" asp-route-searchBy="" asp-route-pageNumber="1" class="btn btn-secondary px-4">
                                <i class="fas fa-redo me-2"></i>Reset
                            </a>
                        </div>
                    </div>
                </form>
            </div>
            <div class="col-md-4 text-end">
                <form asp-action="DownloadTransactions" method="get" class="d-inline">
                    <input type="hidden" name="searchBy" value="@ViewData["SearchBy"]" />
                    <input type="hidden" name="searchString" value="@ViewData["SearchString"]" />
                    <button type="submit" class="btn btn-success px-4 download-btn">
                        <i class="fas fa-file-excel me-2"></i>Export to Excel
                    </button>
                    <a asp-action="Create" class="btn btn-primary px-4 ms-2">
                        <i class="fas fa-plus me-2"></i>New Transaction
                    </a>
                </form>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="card shadow-sm">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0 transaction-table">
                        <thead class="table-light">
                            <tr>
                                <th class="px-3 col-transaction-id">ID</th>
                                <th class="px-3 col-student-info">Student</th>
                                <th class="px-3 col-book-info">Book</th>
                                <th class="px-3 col-issue-date">Issue Date</th>
                                <th class="px-3 col-return-date">Return Date</th>
                                <th class="px-3 col-status text-center">Status</th>
                                <th class="px-3 text-center col-actions">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="px-3">@item.TransactionID</td>
                                    <td class="px-3">
                                        <div class="fw-bold">@item.StudentName</div>
                                        <small class="text-muted">ID: @item.LRN</small>
                                    </td>
                                    <td class="px-3">@item.BookTitle</td>
                                    <td class="px-3">@item.IssueDate.ToShortDateString()</td>
                                    <td class="px-3">@(item.ReturnDate?.ToShortDateString() ?? "-")</td>
                                    <td class="px-3 text-center">
                                        <span class="badge bg-@(item.TransactionStatus == "Active" ? "success" : "secondary")">
                                            @item.TransactionStatus
                                        </span>
                                    </td>
                                    <td class="px-3 text-center">
                                        <div class="btn-group btn-group-sm">
                                            @if (item.TransactionStatus == "Active")
                                            {
                                                <button class="btn btn-success return-book" data-id="@item.TransactionID" title="Return">
                                                    <i class="fas fa-undo"></i>
                                                </button>
                                            }
                                            <button class="btn btn-danger delete-transaction" data-id="@item.TransactionID" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="1"
                   asp-route-searchString="@ViewData["SearchString"]"
                   asp-route-searchBy="@ViewData["SearchBy"]">
                    <i class="fas fa-angle-double-left"></i>
                </a>
            </li>
            <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-searchString="@ViewData["SearchString"]"
                   asp-route-searchBy="@ViewData["SearchBy"]">
                    <i class="fas fa-chevron-left"></i>
                </a>
            </li>

            @{
                int maxPageLinks = 5;
                int startPage = Math.Max(1, Model.PageIndex - maxPageLinks / 2);
                int endPage = Math.Min(Model.TotalPages, startPage + maxPageLinks - 1);

                if (endPage - startPage + 1 < maxPageLinks)
                {
                    startPage = Math.Max(1, endPage - maxPageLinks + 1);
                }
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-searchString="@ViewData["SearchString"]"
                       asp-route-searchBy="@ViewData["SearchBy"]">@i</a>
                </li>
            }

            <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-searchString="@ViewData["SearchString"]"
                   asp-route-searchBy="@ViewData["SearchBy"]">
                    <i class="fas fa-chevron-right"></i>
                </a>
            </li>
            <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-pageNumber="@Model.TotalPages"
                   asp-route-searchString="@ViewData["SearchString"]"
                   asp-route-searchBy="@ViewData["SearchBy"]">
                    <i class="fas fa-angle-double-right"></i>
                </a>
            </li>
        </ul>
    </nav>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Return Book functionality
            $('.return-book').click(function () {
                const button = $(this);
                const transactionId = button.data('id');

                if (confirm('Are you sure you want to return this book?')) {
                    $.ajax({
                        url: '@Url.Action("ReturnBook", "Transaction")',
                        type: 'POST',
                        data: { id: transactionId },
                        success: function (response) {
                            if (response.success) {
                                const row = button.closest('tr');
                                row.find('.badge')
                                    .removeClass('bg-success')
                                    .addClass('bg-secondary')
                                    .text('Returned');

                                row.find('td:eq(4)').text(response.returnDate);
                                button.remove();

                                toastr.success(response.message);
                            } else {
                                toastr.error(response.message);
                            }
                        },
                        error: function () {
                            toastr.error('Error processing return. Please try again.');
                        }
                    });
                }
            });

            // Delete Transaction functionality
            $('.delete-transaction').click(function () {
                const button = $(this);
                const transactionId = button.data('id');

                if (confirm('Are you sure you want to delete this transaction? This action cannot be undone.')) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Transaction")',
                        type: 'POST',
                        data: {
                            id: transactionId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                button.closest('tr').fadeOut(300, function () {
                                    $(this).remove();
                                });
                                toastr.success('Transaction deleted successfully');
                            } else {
                                toastr.error(response.message || 'Error deleting transaction');
                            }
                        },
                        error: function () {
                            toastr.error('Error deleting transaction. Please try again.');
                        }
                    });
                }
            });
        });
    </script>
}